import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
from streamlit_ace import st_ace

from scipy.integrate import odeint
from scipy.optimize import fsolve
import time

import time
import io
import sys


def order_of_accuracy_and_approximation():
    st.title("9. ЭЛЕМЕНТАРНЫЕ ПРИМЕРЫ РАЗНОСТНЫХ СХЕМ")

    st.markdown("""
       Основой большинства численных алгоритмов вычисления решения ОДУ являются разностные схемы, которые возникают
       при замене производных конечными разностями, т.е. от дифференциальных уравнений совершается переход к алгебраическим уравнениям.

       Рассмотрим основные понятия, которые используются в теории разностных схем и практике их конструирования и применения.
       """)

    st.title("9.1. Понятие о порядке точности и об аппроксимации")

    st.markdown("""Рассмотрим задачу Коши для ОДУ вида""")

    st.latex(r"\frac{dy}{dx} + ay = 0, \quad 0 \leq x \leq 1, \quad y(0) = b. \tag{1}")

    st.markdown("""
    Разобьем отрезок $$[0,1]$$ на шаги длины $$h \quad (h=1/N,N -$$ целое), при этом образуются точки деления (узлы)
    $$x_n$$. Заменим производную $$frac{dy}{dx}$$ конечной разностью
    """)

    st.latex(r"\frac{dy}{dx}|_{x=x_n} \cong \frac{y_{n+1}-y_n}{h},")

    st.markdown("""где $$y_{n+1}$$ означает, что функция $$y(x)$$ вычислена при $$x=x_{n+1}$$:""")

    st.latex(r"y_{n+1} = y(x=x_{n+1}).")

    st.markdown("""
    После такой замены, если предполагать, что нам требуется найти решение лишь в узлах $$x_1, x_2, \dotsc, x_n,$$
    возникает задача решения системы линейных алгебраических уравнений вида
    """)

    st.latex(r"\frac{1}{h}(y_{n+1}-y_n)+ay_n=0, \quad y_0=b, \quad n=0,1,2,\dotsc,N-1. \tag{2}")

    st.markdown("""Решение этих уравнений несложно найти. Для $$y_1$$ имеем""")

    st.latex(r"y_1=(1-ah)y_0=(1-ah)b.")

    st.markdown("""Для $$y_2$$ аналогично получим""")

    st.latex(r"y_2=(1-ah)y_1=(1-ah)^2b.")

    st.markdown("""Вообще, очевидно, при любом $$n$$""")

    st.latex(r"y_n=(1-ah)^nb. \tag{3}")

    st.markdown("""Точное решение задачи (1) при $$x=x_n$$ имеет вид""")

    st.latex(r"y(x_n)=be^{-ax_n}. \tag{4}")

    st.markdown("""Оценим погрешность приближенного решения (3) в точке $$x=x_n$$""")

    st.latex(r"\delta(x_n)=[(1-ah)^{\frac{x_n}{h}}-e^{-ax_n}]b. \tag{5}")

    st.markdown("""
    Нас будет интересовать, как убывает $$\delta(x_n)$$, если мы будем уменьшать шаг $$h$$. Для этого первое слагаемое
    в (5) представим в виде (полагая, что $$|a|h<<1, \quad a(ah)<<1$$):
    """)

    st.latex(
        r"(1-ah)^{\frac{x_n}{h}} = e^{ \frac{x_n}{h} \ln (1-ah)} = \exp \{ \frac{x_n}{h} [-ah - \frac{a^2h^2}{2} + O(h^3) ] \} = "
    )

    st.latex(
        r"= e^{-ax_n}e^{-a^2 \frac{h}{2} x_n} e^{O (h^2)} = e^{-ax_n} [1- \frac{a^2 x_n h}{2} + O(h^2)] [1+O(h^2)] ="
    )

    st.latex(
        r"= e^{-ax_n} - h \frac{a^2 x_n}{2} e^{-ax_n} + O(h^2).")

    st.markdown("""Следовательно,""")

    st.latex(r"y_n = [e^{-ax_n} - h \frac{a^2 x_n}{2} e^{-ax_n} + O(h^2)]b")

    st.markdown("""и""")

    st.latex(r"\delta(x_n) = -dh \frac{a^2 x_n}{2} e^{-ax_n} + O(h^2) = O(h).")

    st.markdown("""
        Таким образом, для любого $$x_n$$, $$n=0,1,2,\dotsc,N-1$$, погрешность приближенного 
        решения стремится к нулю при $$h \\to 0$$, и величина погрешности пропорциональна первой степени $$h$$.
        В этом случае говорят, что разностная схема имеет первый порядок точности.

        Почему у схемы (2) оказался первый порядок точности относительно шага $$h$$? Дело в том, что именно
        такую ошибку мы внесли в задачу, заменив производную конечной разностью. В самом деле, оценим погрешность
        замены $$ \\frac{dy}{dx} $$ конечной разностью на гладких функциях $$y(x)$$, используя ряд Тейлора в узле $$x = x_n$$:   
    """)

    st.latex(r"y_{n+1} = y_n + hy'_n + \frac{h^2}{2} y''_n + \frac{h^3}{2}y'''_n + O(h^4).")

    st.markdown("""Тогда""")

    st.latex(r"\frac{1}{h} (y_{n+1} - y_n) = y'_n + \frac{h}{2}y''_n + O(h^2).")

    st.markdown("""
        Таким образом, в схеме (2) мы при замене производной допустили ошибку $$O(h)$$, поэтому и скорость сходимости
         в этой схеме получилась первого порядка.

         Однако оказывается, что для сходимости приближенного решения к точному с заданным порядком точности мало обеспечить
         соответствующий порядок точности при замене производных. К схеме надо предъявить еще одно требование - устойчивость.
    """)


def unstable_difference_scheme():
    st.title("9.2. Пример неустойчивой разностной схемы")

    st.markdown("""Рассмотрим теперь следующую замену производной при $$x=x_n$$:""")

    st.latex(r"\frac{dy}{dx} \cong \mu \frac{1}{2h} (y_{n+1} - y_{n-1}) + \frac{1}{h} (y_{n+1} - y_n)(1 - \mu).")

    st.markdown("""
        Очевидно, что при любом $$\mu$$ это выражение будет приближать $$dy/dx$$ с точностью
        не хуже $$O(h)$$. Таким образом, мы получаем целое семейство схем вида
    """)

    st.latex(
        r"\mu \frac{1}{2h} (y_{n+1} - y_{n-1}) + (1 - \mu) \frac{1}{h} (y_{n+1} - y_n) + ay_n = 0, \quad n=2,3,...")

    st.markdown("""
        параметрически зависящих от $$\mu$$. При $$\mu=0$$ имеем схему (2).

        Положим теперь $$\mu=4$$ и запишем разностные уравнения в виде
    """)

    st.latex(r"-2Y_{n-1} + (3 +ah)y_n - y_{n+1} = 0, \quad n=2,3,... \tag{6}")

    st.markdown("""Будем искать решение уравнений (6) в виде""")

    st.latex(r"y_n = cq^n.")

    st.markdown("""Для $$q$$ получим""")

    st.latex(r"-2y_{n-1} + (3+ah)q - q^2 = 0,")

    st.markdown("""откуда""")

    st.latex(r"q_1 = 1/2 (3 + ah- \sqrt{a^2h^2 + 6ah + 1}) = 1 - ah + 2a^2h^2 + O(h^3);")

    st.latex(
        r"q_2 = 1/2 (3 + ah+ \sqrt{a^2h^2 + 6ah + 1}) = 2(1 + ah) + O(h^2).")

    st.markdown("""Полагая в общем случае""")

    st.latex(r"y_n = c_1q^n_1 + c_2q^n_2,")

    st.markdown("""из условий, что при $$ n=0 $$""")

    st.latex(r"y_0 = c_1 + c_2,")

    st.markdown("""а при $$ n=1 $$""")

    st.latex(r"y_1 = c_1q_1 + c_2q_2,")

    st.markdown("""найдем""")

    st.latex(
        r"y_n = \frac{q_2y_0 - y_1}{q_2 - q_1} q^n_1 - \frac{q_1y_0 - y_1}{q_2 - q_1}q^n_2 = y_0 [\frac{q_2}{q_2 - q_1} q^n_1 - \frac{q_1}{q_2 - q_1} q^n_2] + "
    )

    st.latex(
        r"+ y_1 [- \frac{1}{q_2 - q_1} q^n_1 + \frac{1}{q_2 - q_1} q^n_2] \tag{7}")

    st.markdown("""Для $$q^n_1, q^n_2$$, используя приближенные выражения, получим""")

    st.latex(r"q^n_1 = [1 - ah + O(h^2)]^n = [1 - ah + O(h^2)]^{x_n/h} = e^{-ax_n} + O(h);"
             )

    st.latex(
        r"q^n_2 = [2(1 + ah) + O(h^2)]^n = [2(1 + ah) + O(h^2)]^x_n/h ="
    )

    st.latex(
        r"= 2^{x_n/h}[e^{ax_n} + O(h)].")

    st.markdown("""Подставляя эти выражения в формулу для $$ y_n $$, находим""")

    st.latex(
        r"y_n = \frac{q_2y_0 - y_1}{q_2 - q_1}[e^{-ax_n} + O(h)] + \frac{q_1y_0 - y_1}{q_1 - q_2} 2^{x_n/h}[e^{ax_n} + O(h)].")

    st.markdown("""
        Положим $$y_1 = be^{-ax_1} = be^{-ah}$$ (т.е. зададим $$y_1$$ точно!).

    Тогда
    """)

    st.latex(r"\frac{q_2y_0 - y_1}{q_2 - q_1} = \frac{b(2 + O(h)) - be^{-ah}}{1 + O(h)} = b + O(h);"
             )

    st.latex(
        r"\frac{q_1y_0 - y_1}{q_2 - q_1} = frac{[1 - ah + 2a^2h^2 +O(h^3)]b - be^{-ah}}{-1 + O(h)} = - frac{3}{2} a^2 h^2 [b + O(h)].")

    st.markdown("""Следовательно,""")

    st.latex(r"y_n = [be^{-ax_n} + O(h)] - [3/2 a^2 be^{ax_n} + O(h)] h^2 2^{x_n/h}.")

    st.markdown("""
        Таким образом, все решение разностных уравнений неограниченно растет при $$ h \to 0 $$. Такого рода разностные
        схемы называются неустойчивыми, они для численного счета непригодны.

        З а м е ч а н и е. Если положить 
    """)

    st.latex(r"y_n = q_1 y_0 = b * 1/2 [3 + ah - \sqrt{a^2 h^2 + 6ah + 1}],")

    st.markdown("""
        то второго (растущего) слагаемого в решении разностных уравнений не будет. Однако любого малого отклонения от
        равенства $$y_1 = q_1y_0$$ будет достаточно, чтобы с уменьшением $$h$$ решение при $$x_n = x = const$$ "отошло" от точного как угодно далеко.
    """)
